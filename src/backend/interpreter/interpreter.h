/* This file is part of the dynarmic project.
 * Copyright (c) 2020 MerryMage
 * This software may be used and distributed according to the terms of the GNU
 * General Public License version 2 or any later version.
 */

#pragma once

#include "backend/interpreter/value.h"
#include "frontend/ir/cond.h"

namespace Dynarmic::IR {
class Inst;
} // namespace Dynarmic::IR

namespace Dynarmic::Backend::Interpreter {

using NZCV = u32;
struct ExecutionContext;

class Interpreter {
protected:
    Interpreter();
    virtual ~Interpreter();

    virtual bool ConditionPassed(IR::Cond cond) = 0;

    // Basics
    void ExecuteVoid();
    void ExecuteIdentity(ExecutionContext&, IR::Inst*);
    void ExecuteBreakpoint();

    // Hints
    void ExecutePushRSB(u64);

    // Pseudo-operations
    void ExecuteGetCarryFromOp(ExecutionContext&, IR::Inst*);
    void ExecuteGetOverflowFromOp(ExecutionContext&, IR::Inst*);
    u32 ExecuteGetGEFromOp(ResultAndGE<u32>);
    NZCV ExecuteGetNZCVFromOp(ResultAndNZCV<u32>);
    Vector ExecuteGetUpperFromOp(UpperAndLower);
    Vector ExecuteGetLowerFromOp(UpperAndLower);

    NZCV ExecuteNZCVFromPackedFlags(u32);

    // Calculations
    u64 ExecutePack2x32To1x64(u32, u32);
    Vector ExecutePack2x64To1x128(u64, u64);
    u32 ExecuteLeastSignificantWord(u64);
    ResultAndCarry<u32> ExecuteMostSignificantWord(u64);
    u16 ExecuteLeastSignificantHalf(u32);
    u8 ExecuteLeastSignificantByte(u32);
    bool ExecuteMostSignificantBit(u32);
    bool ExecuteIsZero32(u32);
    bool ExecuteIsZero64(u64);
    bool ExecuteTestBit(u64, u8);
    u32 ExecuteConditionalSelect32(IR::Cond, u32, u32);
    u64 ExecuteConditionalSelect64(IR::Cond, u64, u64);
    NZCV ExecuteConditionalSelectNZCV(IR::Cond, NZCV, NZCV);
    ResultAndCarry<u32> ExecuteLogicalShiftLeft32(u32, u8, bool);
    u64 ExecuteLogicalShiftLeft64(u64, u8);
    ResultAndCarry<u32> ExecuteLogicalShiftRight32(u32, u8, bool);
    u64 ExecuteLogicalShiftRight64(u64, u8);
    ResultAndCarry<u32> ExecuteArithmeticShiftRight32(u32, u8, bool);
    u64 ExecuteArithmeticShiftRight64(u64, u8);
    ResultAndCarry<u32> ExecuteRotateRight32(u32, u8, bool);
    u64 ExecuteRotateRight64(u64, u8);
    ResultAndCarry<u32> ExecuteRotateRightExtended(u32, bool);
    ResultAndNZCV<u32> ExecuteAdd32(u32, u32, bool);
    ResultAndNZCV<u64> ExecuteAdd64(u64, u64, bool);
    ResultAndNZCV<u32> ExecuteSub32(u32, u32, bool);
    ResultAndNZCV<u64> ExecuteSub64(u64, u64, bool);
    u32 ExecuteMul32(u32, u32);
    u64 ExecuteMul64(u64, u64);
    u64 ExecuteSignedMultiplyHigh64(u64, u64);
    u64 ExecuteUnsignedMultiplyHigh64(u64, u64);
    u32 ExecuteUnsignedDiv32(u32, u32);
    u64 ExecuteUnsignedDiv64(u64, u64);
    s32 ExecuteSignedDiv32(s32, s32);
    s64 ExecuteSignedDiv64(s64, s64);
    u32 ExecuteAnd32(u32, u32);
    u64 ExecuteAnd64(u64, u64);
    u32 ExecuteEor32(u32, u32);
    u64 ExecuteEor64(u64, u64);
    u32 ExecuteOr32(u32, u32);
    u64 ExecuteOr64(u64, u64);
    u32 ExecuteNot32(u32);
    u64 ExecuteNot64(u64);
    s32 ExecuteSignExtendByteToWord(s8);
    s32 ExecuteSignExtendHalfToWord(s16);
    s64 ExecuteSignExtendByteToLong(s8);
    s64 ExecuteSignExtendHalfToLong(s16);
    s64 ExecuteSignExtendWordToLong(s32);
    u32 ExecuteZeroExtendByteToWord(u8);
    u32 ExecuteZeroExtendHalfToWord(u16);
    u64 ExecuteZeroExtendByteToLong(u8);
    u64 ExecuteZeroExtendHalfToLong(u16);
    u64 ExecuteZeroExtendWordToLong(u32);
    Vector ExecuteZeroExtendLongToQuad(u64);
    u32 ExecuteByteReverseWord(u32);
    u16 ExecuteByteReverseHalf(u16);
    u64 ExecuteByteReverseDual(u64);
    u32 ExecuteCountLeadingZeros32(u32);
    u64 ExecuteCountLeadingZeros64(u64);
    u32 ExecuteExtractRegister32(u32, u32, u8);
    u64 ExecuteExtractRegister64(u64, u64, u8);
    s32 ExecuteMaxSigned32(s32, s32);
    s64 ExecuteMaxSigned64(s64, s64);
    u32 ExecuteMaxUnsigned32(u32, u32);
    u64 ExecuteMaxUnsigned64(u64, u64);
    s32 ExecuteMinSigned32(s32, s32);
    s64 ExecuteMinSigned64(s64, s64);
    u32 ExecuteMinUnsigned32(u32, u32);
    u64 ExecuteMinUnsigned64(u64, u64);

    // Saturated instructions
    ResultAndOverflow<u8> ExecuteSignedSaturatedAdd8(u8, u8);
    ResultAndOverflow<u16> ExecuteSignedSaturatedAdd16(u16, u16);
    ResultAndOverflow<u32> ExecuteSignedSaturatedAdd32(u32, u32);
    ResultAndOverflow<u64> ExecuteSignedSaturatedAdd64(u64, u64);
    ResultAndOverflow<u16> ExecuteSignedSaturatedDoublingMultiplyReturnHigh16(u16, u16);
    ResultAndOverflow<u32> ExecuteSignedSaturatedDoublingMultiplyReturnHigh32(u32, u32);
    ResultAndOverflow<u8> ExecuteSignedSaturatedSub8(u8, u8);
    ResultAndOverflow<u16> ExecuteSignedSaturatedSub16(u16, u16);
    ResultAndOverflow<u32> ExecuteSignedSaturatedSub32(u32, u32);
    ResultAndOverflow<u64> ExecuteSignedSaturatedSub64(u64, u64);
    ResultAndOverflow<u32> ExecuteSignedSaturation(u32, u8);
    ResultAndOverflow<u8> ExecuteUnsignedSaturatedAdd8(u8, u8);
    ResultAndOverflow<u16> ExecuteUnsignedSaturatedAdd16(u16, u16);
    ResultAndOverflow<u32> ExecuteUnsignedSaturatedAdd32(u32, u32);
    ResultAndOverflow<u64> ExecuteUnsignedSaturatedAdd64(u64, u64);
    ResultAndOverflow<u8> ExecuteUnsignedSaturatedSub8(u8, u8);
    ResultAndOverflow<u16> ExecuteUnsignedSaturatedSub16(u16, u16);
    ResultAndOverflow<u32> ExecuteUnsignedSaturatedSub32(u32, u32);
    ResultAndOverflow<u64> ExecuteUnsignedSaturatedSub64(u64, u64);
    ResultAndOverflow<u32> ExecuteUnsignedSaturation(u32, u8);

    // Packed instructions
    ResultAndGE<u32> ExecutePackedAddU8(u32, u32);
    ResultAndGE<u32> ExecutePackedAddS8(u32, u32);
    ResultAndGE<u32> ExecutePackedSubU8(u32, u32);
    ResultAndGE<u32> ExecutePackedSubS8(u32, u32);
    ResultAndGE<u32> ExecutePackedAddU16(u32, u32);
    ResultAndGE<u32> ExecutePackedAddS16(u32, u32);
    ResultAndGE<u32> ExecutePackedSubU16(u32, u32);
    ResultAndGE<u32> ExecutePackedSubS16(u32, u32);
    ResultAndGE<u32> ExecutePackedAddSubU16(u32, u32);
    ResultAndGE<u32> ExecutePackedAddSubS16(u32, u32);
    ResultAndGE<u32> ExecutePackedSubAddU16(u32, u32);
    ResultAndGE<u32> ExecutePackedSubAddS16(u32, u32);
    u32 ExecutePackedHalvingAddU8(u32, u32);
    u32 ExecutePackedHalvingAddS8(u32, u32);
    u32 ExecutePackedHalvingSubU8(u32, u32);
    u32 ExecutePackedHalvingSubS8(u32, u32);
    u32 ExecutePackedHalvingAddU16(u32, u32);
    u32 ExecutePackedHalvingAddS16(u32, u32);
    u32 ExecutePackedHalvingSubU16(u32, u32);
    u32 ExecutePackedHalvingSubS16(u32, u32);
    u32 ExecutePackedHalvingAddSubU16(u32, u32);
    u32 ExecutePackedHalvingAddSubS16(u32, u32);
    u32 ExecutePackedHalvingSubAddU16(u32, u32);
    u32 ExecutePackedHalvingSubAddS16(u32, u32);
    u32 ExecutePackedSaturatedAddU8(u32, u32);
    u32 ExecutePackedSaturatedAddS8(u32, u32);
    u32 ExecutePackedSaturatedSubU8(u32, u32);
    u32 ExecutePackedSaturatedSubS8(u32, u32);
    u32 ExecutePackedSaturatedAddU16(u32, u32);
    u32 ExecutePackedSaturatedAddS16(u32, u32);
    u32 ExecutePackedSaturatedSubU16(u32, u32);
    u32 ExecutePackedSaturatedSubS16(u32, u32);
    u32 ExecutePackedAbsDiffSumS8(u32, u32);
    u32 ExecutePackedSelect(u32, u32, u32);

    // CRC instructions
    u32 ExecuteCRC32Castagnoli8(u32, u32);
    u32 ExecuteCRC32Castagnoli16(u32, u32);
    u32 ExecuteCRC32Castagnoli32(u32, u32);
    u32 ExecuteCRC32Castagnoli64(u32, u64);
    u32 ExecuteCRC32ISO8(u32, u32);
    u32 ExecuteCRC32ISO16(u32, u32);
    u32 ExecuteCRC32ISO32(u32, u32);
    u32 ExecuteCRC32ISO64(u32, u64);

    // AES instructions
    Vector ExecuteAESDecryptSingleRound(Vector);
    Vector ExecuteAESEncryptSingleRound(Vector);
    Vector ExecuteAESInverseMixColumns(Vector);
    Vector ExecuteAESMixColumns(Vector);

    // SM4 instructions
    u8 ExecuteSM4AccessSubstitutionBox(u8);

    // Vector instructions
    u8 ExecuteVectorGetElement8(Vector, u8);
    u16 ExecuteVectorGetElement16(Vector, u8);
    u32 ExecuteVectorGetElement32(Vector, u8);
    u64 ExecuteVectorGetElement64(Vector, u8);
    Vector ExecuteVectorSetElement8(Vector, u8, u8);
    Vector ExecuteVectorSetElement16(Vector, u8, u16);
    Vector ExecuteVectorSetElement32(Vector, u8, u32);
    Vector ExecuteVectorSetElement64(Vector, u8, u64);
    Vector ExecuteVectorAbs8(Vector);
    Vector ExecuteVectorAbs16(Vector);
    Vector ExecuteVectorAbs32(Vector);
    Vector ExecuteVectorAbs64(Vector);
    Vector ExecuteVectorAdd8(Vector, Vector);
    Vector ExecuteVectorAdd16(Vector, Vector);
    Vector ExecuteVectorAdd32(Vector, Vector);
    Vector ExecuteVectorAdd64(Vector, Vector);
    Vector ExecuteVectorAnd(Vector, Vector);
    Vector ExecuteVectorArithmeticShiftRight8(Vector, u8);
    Vector ExecuteVectorArithmeticShiftRight16(Vector, u8);
    Vector ExecuteVectorArithmeticShiftRight32(Vector, u8);
    Vector ExecuteVectorArithmeticShiftRight64(Vector, u8);
    Vector ExecuteVectorArithmeticVShift8(Vector, Vector);
    Vector ExecuteVectorArithmeticVShift16(Vector, Vector);
    Vector ExecuteVectorArithmeticVShift32(Vector, Vector);
    Vector ExecuteVectorArithmeticVShift64(Vector, Vector);
    Vector ExecuteVectorBroadcastLower8(u8);
    Vector ExecuteVectorBroadcastLower16(u16);
    Vector ExecuteVectorBroadcastLower32(u32);
    Vector ExecuteVectorBroadcast8(u8);
    Vector ExecuteVectorBroadcast16(u16);
    Vector ExecuteVectorBroadcast32(u32);
    Vector ExecuteVectorBroadcast64(u64);
    Vector ExecuteVectorCountLeadingZeros8(Vector);
    Vector ExecuteVectorCountLeadingZeros16(Vector);
    Vector ExecuteVectorCountLeadingZeros32(Vector);
    Vector ExecuteVectorDeinterleaveEven8(Vector, Vector);
    Vector ExecuteVectorDeinterleaveEven16(Vector, Vector);
    Vector ExecuteVectorDeinterleaveEven32(Vector, Vector);
    Vector ExecuteVectorDeinterleaveEven64(Vector, Vector);
    Vector ExecuteVectorDeinterleaveOdd8(Vector, Vector);
    Vector ExecuteVectorDeinterleaveOdd16(Vector, Vector);
    Vector ExecuteVectorDeinterleaveOdd32(Vector, Vector);
    Vector ExecuteVectorDeinterleaveOdd64(Vector, Vector);
    Vector ExecuteVectorEor(Vector, Vector);
    Vector ExecuteVectorEqual8(Vector, Vector);
    Vector ExecuteVectorEqual16(Vector, Vector);
    Vector ExecuteVectorEqual32(Vector, Vector);
    Vector ExecuteVectorEqual64(Vector, Vector);
    Vector ExecuteVectorEqual128(Vector, Vector);
    Vector ExecuteVectorExtract(Vector, Vector, u8);
    Vector ExecuteVectorExtractLower(Vector, Vector, u8);
    Vector ExecuteVectorGreaterS8(Vector, Vector);
    Vector ExecuteVectorGreaterS16(Vector, Vector);
    Vector ExecuteVectorGreaterS32(Vector, Vector);
    Vector ExecuteVectorGreaterS64(Vector, Vector);
    Vector ExecuteVectorHalvingAddS8(Vector, Vector);
    Vector ExecuteVectorHalvingAddS16(Vector, Vector);
    Vector ExecuteVectorHalvingAddS32(Vector, Vector);
    Vector ExecuteVectorHalvingAddu8(Vector, Vector);
    Vector ExecuteVectorHalvingAddu16(Vector, Vector);
    Vector ExecuteVectorHalvingAddu32(Vector, Vector);
    Vector ExecuteVectorHalvingSubS8(Vector, Vector);
    Vector ExecuteVectorHalvingSubS16(Vector, Vector);
    Vector ExecuteVectorHalvingSubS32(Vector, Vector);
    Vector ExecuteVectorHalvingSubu8(Vector, Vector);
    Vector ExecuteVectorHalvingSubu16(Vector, Vector);
    Vector ExecuteVectorHalvingSubu32(Vector, Vector);
    Vector ExecuteVectorInterleaveLower8(Vector, Vector);
    Vector ExecuteVectorInterleaveLower16(Vector, Vector);
    Vector ExecuteVectorInterleaveLower32(Vector, Vector);
    Vector ExecuteVectorInterleaveLower64(Vector, Vector);
    Vector ExecuteVectorInterleaveUpper8(Vector, Vector);
    Vector ExecuteVectorInterleaveUpper16(Vector, Vector);
    Vector ExecuteVectorInterleaveUpper32(Vector, Vector);
    Vector ExecuteVectorInterleaveUpper64(Vector, Vector);
    Vector ExecuteVectorLogicalShiftLeft8(Vector, u8);
    Vector ExecuteVectorLogicalShiftLeft16(Vector, u8);
    Vector ExecuteVectorLogicalShiftLeft32(Vector, u8);
    Vector ExecuteVectorLogicalShiftLeft64(Vector, u8);
    Vector ExecuteVectorLogicalShiftRight8(Vector, u8);
    Vector ExecuteVectorLogicalShiftRight16(Vector, u8);
    Vector ExecuteVectorLogicalShiftRight32(Vector, u8);
    Vector ExecuteVectorLogicalShiftRight64(Vector, u8);
    Vector ExecuteVectorLogicalVShift8(Vector, Vector);
    Vector ExecuteVectorLogicalVShift16(Vector, Vector);
    Vector ExecuteVectorLogicalVShift32(Vector, Vector);
    Vector ExecuteVectorLogicalVShift64(Vector, Vector);
    Vector ExecuteVectorMaxS8(Vector, Vector);
    Vector ExecuteVectorMaxS16(Vector, Vector);
    Vector ExecuteVectorMaxS32(Vector, Vector);
    Vector ExecuteVectorMaxS64(Vector, Vector);
    Vector ExecuteVectorMaxu8(Vector, Vector);
    Vector ExecuteVectorMaxu16(Vector, Vector);
    Vector ExecuteVectorMaxu32(Vector, Vector);
    Vector ExecuteVectorMaxu64(Vector, Vector);
    Vector ExecuteVectorMinS8(Vector, Vector);
    Vector ExecuteVectorMinS16(Vector, Vector);
    Vector ExecuteVectorMinS32(Vector, Vector);
    Vector ExecuteVectorMinS64(Vector, Vector);
    Vector ExecuteVectorMinu8(Vector, Vector);
    Vector ExecuteVectorMinu16(Vector, Vector);
    Vector ExecuteVectorMinu32(Vector, Vector);
    Vector ExecuteVectorMinu64(Vector, Vector);
    Vector ExecuteVectorMultiply8(Vector, Vector);
    Vector ExecuteVectorMultiply16(Vector, Vector);
    Vector ExecuteVectorMultiply32(Vector, Vector);
    Vector ExecuteVectorMultiply64(Vector, Vector);
    Vector ExecuteVectorNarrow16(Vector);
    Vector ExecuteVectorNarrow32(Vector);
    Vector ExecuteVectorNarrow64(Vector);
    Vector ExecuteVectorNot(Vector);
    Vector ExecuteVectorOr(Vector, Vector);
    Vector ExecuteVectorPairedAddLower8(Vector, Vector);
    Vector ExecuteVectorPairedAddLower16(Vector, Vector);
    Vector ExecuteVectorPairedAddLower32(Vector, Vector);
    Vector ExecuteVectorPairedAddSignedWiden8(Vector);
    Vector ExecuteVectorPairedAddSignedWiden16(Vector);
    Vector ExecuteVectorPairedAddSignedWiden32(Vector);
    Vector ExecuteVectorPairedAddUnsignedWiden8(Vector);
    Vector ExecuteVectorPairedAddUnsignedWiden16(Vector);
    Vector ExecuteVectorPairedAddUnsignedWiden32(Vector);
    Vector ExecuteVectorPairedAdd8(Vector, Vector);
    Vector ExecuteVectorPairedAdd16(Vector, Vector);
    Vector ExecuteVectorPairedAdd32(Vector, Vector);
    Vector ExecuteVectorPairedAdd64(Vector, Vector);
    Vector ExecuteVectorPairedMaxS8(Vector, Vector);
    Vector ExecuteVectorPairedMaxS16(Vector, Vector);
    Vector ExecuteVectorPairedMaxS32(Vector, Vector);
    Vector ExecuteVectorPairedMaxu8(Vector, Vector);
    Vector ExecuteVectorPairedMaxu16(Vector, Vector);
    Vector ExecuteVectorPairedMaxu32(Vector, Vector);
    Vector ExecuteVectorPairedMinS8(Vector, Vector);
    Vector ExecuteVectorPairedMinS16(Vector, Vector);
    Vector ExecuteVectorPairedMinS32(Vector, Vector);
    Vector ExecuteVectorPairedMinu8(Vector, Vector);
    Vector ExecuteVectorPairedMinu16(Vector, Vector);
    Vector ExecuteVectorPairedMinu32(Vector, Vector);
    Vector ExecuteVectorPolynomialMultiply8(Vector, Vector);
    Vector ExecuteVectorPolynomialMultiplyLong8(Vector, Vector);
    Vector ExecuteVectorPolynomialMultiplyLong64(Vector, Vector);
    Vector ExecuteVectorPopulationCount(Vector);
    Vector ExecuteVectorReverseBits(Vector);
    Vector ExecuteVectorRoundingHalvingAddS8(Vector, Vector);
    Vector ExecuteVectorRoundingHalvingAddS16(Vector, Vector);
    Vector ExecuteVectorRoundingHalvingAddS32(Vector, Vector);
    Vector ExecuteVectorRoundingHalvingAddu8(Vector, Vector);
    Vector ExecuteVectorRoundingHalvingAddu16(Vector, Vector);
    Vector ExecuteVectorRoundingHalvingAddu32(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftS8(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftS16(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftS32(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftS64(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftu8(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftu16(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftu32(Vector, Vector);
    Vector ExecuteVectorRoundingShiftLeftu64(Vector, Vector);
    Vector ExecuteVectorShuffleHighHalfwords(Vector, u8);
    Vector ExecuteVectorShuffleLowHalfwords(Vector, u8);
    Vector ExecuteVectorShuffleWords(Vector, u8);
    Vector ExecuteVectorSignExtend8(Vector);
    Vector ExecuteVectorSignExtend16(Vector);
    Vector ExecuteVectorSignExtend32(Vector);
    Vector ExecuteVectorSignExtend64(Vector);
    Vector ExecuteVectorSignedAbsoluteDifference8(Vector, Vector);
    Vector ExecuteVectorSignedAbsoluteDifference16(Vector, Vector);
    Vector ExecuteVectorSignedAbsoluteDifference32(Vector, Vector);
    UpperAndLower ExecuteVectorSignedMultiply16(Vector, Vector);
    UpperAndLower ExecuteVectorSignedMultiply32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedAbs8(Vector);
    Vector ExecuteVectorSignedSaturatedAbs16(Vector);
    Vector ExecuteVectorSignedSaturatedAbs32(Vector);
    Vector ExecuteVectorSignedSaturatedAbs64(Vector);
    Vector ExecuteVectorSignedSaturatedAccumulateUnsigned8(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedAccumulateUnsigned16(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedAccumulateUnsigned32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedAccumulateUnsigned64(Vector, Vector);
    UpperAndLower ExecuteVectorSignedSaturatedDoublingMultiply16(Vector, Vector);
    UpperAndLower ExecuteVectorSignedSaturatedDoublingMultiply32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedDoublingMultiplyLong16(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedDoublingMultiplyLong32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToSigned16(Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToSigned32(Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToSigned64(Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToUnsigned16(Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToUnsigned32(Vector);
    Vector ExecuteVectorSignedSaturatedNarrowToUnsigned64(Vector);
    Vector ExecuteVectorSignedSaturatedNeg8(Vector);
    Vector ExecuteVectorSignedSaturatedNeg16(Vector);
    Vector ExecuteVectorSignedSaturatedNeg32(Vector);
    Vector ExecuteVectorSignedSaturatedNeg64(Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeft8(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeft16(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeft32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeft64(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeftUnsigned8(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeftUnsigned16(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeftUnsigned32(Vector, Vector);
    Vector ExecuteVectorSignedSaturatedShiftLeftUnsigned64(Vector, Vector);
    Vector ExecuteVectorSub8(Vector, Vector);
    Vector ExecuteVectorSub16(Vector, Vector);
    Vector ExecuteVectorSub32(Vector, Vector);
    Vector ExecuteVectorSub64(Vector, Vector);
    void ExecuteVectorTable();
    void ExecuteVectorTableLookup(ExecutionContext&, IR::Inst*);
    Vector ExecuteVectorUnsignedAbsoluteDifference8(Vector, Vector);
    Vector ExecuteVectorUnsignedAbsoluteDifference16(Vector, Vector);
    Vector ExecuteVectorUnsignedAbsoluteDifference32(Vector, Vector);
    void ExecuteVectorUnsignedMultiply16(Vector, Vector);
    void ExecuteVectorUnsignedMultiply32(Vector, Vector);
    Vector ExecuteVectorUnsignedRecipEstimate(Vector);
    Vector ExecuteVectorUnsignedRecipSqrtEstimate(Vector);
    Vector ExecuteVectorUnsignedSaturatedAccumulateSigned8(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedAccumulateSigned16(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedAccumulateSigned32(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedAccumulateSigned64(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedNarrow16(Vector);
    Vector ExecuteVectorUnsignedSaturatedNarrow32(Vector);
    Vector ExecuteVectorUnsignedSaturatedNarrow64(Vector);
    Vector ExecuteVectorUnsignedSaturatedShiftLeft8(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedShiftLeft16(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedShiftLeft32(Vector, Vector);
    Vector ExecuteVectorUnsignedSaturatedShiftLeft64(Vector, Vector);
    Vector ExecuteVectorZeroExtend8(Vector);
    Vector ExecuteVectorZeroExtend16(Vector);
    Vector ExecuteVectorZeroExtend32(Vector);
    Vector ExecuteVectorZeroExtend64(Vector);
    Vector ExecuteVectorZeroUpper(Vector);
    Vector ExecuteZeroVector();

    // Floating-point operations
    u16 ExecuteFPAbs16(u16);
    u32 ExecuteFPAbs32(u32);
    u64 ExecuteFPAbs64(u64);
    u32 ExecuteFPAdd32(u32, u32);
    u64 ExecuteFPAdd64(u64, u64);
    NZCV ExecuteFPCompare32(u32, u32, bool);
    NZCV ExecuteFPCompare64(u64, u64, bool);
    u32 ExecuteFPDiv32(u32, u32);
    u64 ExecuteFPDiv64(u64, u64);
    u32 ExecuteFPMax32(u32, u32);
    u64 ExecuteFPMax64(u64, u64);
    u32 ExecuteFPMaxNumeric32(u32, u32);
    u64 ExecuteFPMaxNumeric64(u64, u64);
    u32 ExecuteFPMin32(u32, u32);
    u64 ExecuteFPMin64(u64, u64);
    u32 ExecuteFPMinNumeric32(u32, u32);
    u64 ExecuteFPMinNumeric64(u64, u64);
    u32 ExecuteFPMul32(u32, u32);
    u64 ExecuteFPMul64(u64, u64);
    u16 ExecuteFPMulAdd16(u16, u16, u16);
    u32 ExecuteFPMulAdd32(u32, u32, u32);
    u64 ExecuteFPMulAdd64(u64, u64, u64);
    u32 ExecuteFPMulX32(u32, u32);
    u64 ExecuteFPMulX64(u64, u64);
    u16 ExecuteFPNeg16(u16);
    u32 ExecuteFPNeg32(u32);
    u64 ExecuteFPNeg64(u64);
    u16 ExecuteFPRecipEstimate16(u16);
    u32 ExecuteFPRecipEstimate32(u32);
    u64 ExecuteFPRecipEstimate64(u64);
    u16 ExecuteFPRecipExponent16(u16);
    u32 ExecuteFPRecipExponent32(u32);
    u64 ExecuteFPRecipExponent64(u64);
    u16 ExecuteFPRecipStepFused16(u16, u16);
    u32 ExecuteFPRecipStepFused32(u32, u32);
    u64 ExecuteFPRecipStepFused64(u64, u64);
    u16 ExecuteFPRoundInt16(u16, u8, bool);
    u32 ExecuteFPRoundInt32(u32, u8, bool);
    u64 ExecuteFPRoundInt64(u64, u8, bool);
    u16 ExecuteFPRSqrtEstimate16(u16);
    u32 ExecuteFPRSqrtEstimate32(u32);
    u64 ExecuteFPRSqrtEstimate64(u64);
    u16 ExecuteFPRSqrtStepFused16(u16, u16);
    u32 ExecuteFPRSqrtStepFused32(u32, u32);
    u64 ExecuteFPRSqrtStepFused64(u64, u64);
    u32 ExecuteFPSqrt32(u32);
    u64 ExecuteFPSqrt64(u64);
    u32 ExecuteFPSub32(u32, u32);
    u64 ExecuteFPSub64(u64, u64);
    u64 ExecuteFPHalfToDouble(u16, u8);
    u32 ExecuteFPHalfToSingle(u16, u8);
    u64 ExecuteFPSingleToDouble(u32, u8);
    u16 ExecuteFPSingleToHalf(u32, u8);
    u16 ExecuteFPDoubleToHalf(u64, u8);
    u32 ExecuteFPDoubleToSingle(u64, u8);
    u32 ExecuteFPDoubleToFixedS32(u64, u8, u8);
    u64 ExecuteFPDoubleToFixedS64(u64, u8, u8);
    u32 ExecuteFPDoubleToFixedu32(u64, u8, u8);
    u64 ExecuteFPDoubleToFixedu64(u64, u8, u8);
    u32 ExecuteFPHalfToFixedS32(u16, u8, u8);
    u64 ExecuteFPHalfToFixedS64(u16, u8, u8);
    u32 ExecuteFPHalfToFixedu32(u16, u8, u8);
    u64 ExecuteFPHalfToFixedu64(u16, u8, u8);
    u32 ExecuteFPSingleToFixedS32(u32, u8, u8);
    u64 ExecuteFPSingleToFixedS64(u32, u8, u8);
    u32 ExecuteFPSingleToFixedu32(u32, u8, u8);
    u64 ExecuteFPSingleToFixedu64(u32, u8, u8);
    u32 ExecuteFPFixedu32ToSingle(u32, u8, u8);
    u32 ExecuteFPFixedS32ToSingle(u32, u8, u8);
    u64 ExecuteFPFixedu32ToDouble(u32, u8, u8);
    u64 ExecuteFPFixedu64ToDouble(u64, u8, u8);
    u32 ExecuteFPFixedu64ToSingle(u64, u8, u8);
    u64 ExecuteFPFixedS32ToDouble(u32, u8, u8);
    u64 ExecuteFPFixedS64ToDouble(u64, u8, u8);
    u32 ExecuteFPFixedS64ToSingle(u64, u8, u8);

    // Floating-point vector instructions
    Vector ExecuteFPVectorAbs16(Vector);
    Vector ExecuteFPVectorAbs32(Vector);
    Vector ExecuteFPVectorAbs64(Vector);
    Vector ExecuteFPVectorAdd32(Vector, Vector);
    Vector ExecuteFPVectorAdd64(Vector, Vector);
    Vector ExecuteFPVectorDiv32(Vector, Vector);
    Vector ExecuteFPVectorDiv64(Vector, Vector);
    Vector ExecuteFPVectorEqual16(Vector, Vector);
    Vector ExecuteFPVectorEqual32(Vector, Vector);
    Vector ExecuteFPVectorEqual64(Vector, Vector);
    Vector ExecuteFPVectorFromSignedFixed32(Vector, u8, u8);
    Vector ExecuteFPVectorFromSignedFixed64(Vector, u8, u8);
    Vector ExecuteFPVectorFromUnsignedFixed32(Vector, u8, u8);
    Vector ExecuteFPVectorFromUnsignedFixed64(Vector, u8, u8);
    Vector ExecuteFPVectorGreater32(Vector, Vector);
    Vector ExecuteFPVectorGreater64(Vector, Vector);
    Vector ExecuteFPVectorGreaterEqual32(Vector, Vector);
    Vector ExecuteFPVectorGreaterEqual64(Vector, Vector);
    Vector ExecuteFPVectorMax32(Vector, Vector);
    Vector ExecuteFPVectorMax64(Vector, Vector);
    Vector ExecuteFPVectorMin32(Vector, Vector);
    Vector ExecuteFPVectorMin64(Vector, Vector);
    Vector ExecuteFPVectorMul32(Vector, Vector);
    Vector ExecuteFPVectorMul64(Vector, Vector);
    Vector ExecuteFPVectorMulAdd16(Vector, Vector, Vector);
    Vector ExecuteFPVectorMulAdd32(Vector, Vector, Vector);
    Vector ExecuteFPVectorMulAdd64(Vector, Vector, Vector);
    Vector ExecuteFPVectorMulX32(Vector, Vector);
    Vector ExecuteFPVectorMulX64(Vector, Vector);
    Vector ExecuteFPVectorNeg16(Vector);
    Vector ExecuteFPVectorNeg32(Vector);
    Vector ExecuteFPVectorNeg64(Vector);
    Vector ExecuteFPVectorPairedAdd32(Vector, Vector);
    Vector ExecuteFPVectorPairedAdd64(Vector, Vector);
    Vector ExecuteFPVectorPairedAddLower32(Vector, Vector);
    Vector ExecuteFPVectorPairedAddLower64(Vector, Vector);
    Vector ExecuteFPVectorRecipEstimate16(Vector);
    Vector ExecuteFPVectorRecipEstimate32(Vector);
    Vector ExecuteFPVectorRecipEstimate64(Vector);
    Vector ExecuteFPVectorRecipStepFused16(Vector, Vector);
    Vector ExecuteFPVectorRecipStepFused32(Vector, Vector);
    Vector ExecuteFPVectorRecipStepFused64(Vector, Vector);
    Vector ExecuteFPVectorRoundInt16(Vector, u8, bool);
    Vector ExecuteFPVectorRoundInt32(Vector, u8, bool);
    Vector ExecuteFPVectorRoundInt64(Vector, u8, bool);
    Vector ExecuteFPVectorRSqrtEstimate16(Vector);
    Vector ExecuteFPVectorRSqrtEstimate32(Vector);
    Vector ExecuteFPVectorRSqrtEstimate64(Vector);
    Vector ExecuteFPVectorRSqrtStepFused16(Vector, Vector);
    Vector ExecuteFPVectorRSqrtStepFused32(Vector, Vector);
    Vector ExecuteFPVectorRSqrtStepFused64(Vector, Vector);
    Vector ExecuteFPVectorSqrt32(Vector);
    Vector ExecuteFPVectorSqrt64(Vector);
    Vector ExecuteFPVectorSub32(Vector, Vector);
    Vector ExecuteFPVectorSub64(Vector, Vector);
    Vector ExecuteFPVectorToSignedFixed16(Vector, u8, u8);
    Vector ExecuteFPVectorToSignedFixed32(Vector, u8, u8);
    Vector ExecuteFPVectorToSignedFixed64(Vector, u8, u8);
    Vector ExecuteFPVectorToUnsignedFixed16(Vector, u8, u8);
    Vector ExecuteFPVectorToUnsignedFixed32(Vector, u8, u8);
    Vector ExecuteFPVectorToUnsignedFixed64(Vector, u8, u8);
};

} // namespace Dynarmic::Backend::Interpreter
